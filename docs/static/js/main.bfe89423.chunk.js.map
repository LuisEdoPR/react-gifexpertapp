{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","handleSubmit","e","preventDefault","trim","length","c","onSubmit","type","value","onChange","target","GifGridItem","id","title","url","console","log","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","props","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAoCeA,EAjCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAQjCC,EAAe,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAACS,GAAD,OAASP,GAAT,mBAAwBO,OACtCN,EAAc,MAItB,OACI,sBAAMO,SAAUN,EAAhB,SACI,uBACIO,KAAK,OACLC,MAAOV,EACPW,SAlBe,SAACR,GACxBF,EAAcE,EAAES,OAAOF,QAkBfF,SAAUN,O,QCRXW,EAfK,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAG9B,OADAC,QAAQC,IAAIJ,EAAIC,EAAOC,GAEnB,sBAAKG,UAAU,yDAAf,UACI,qBAAKC,IAAKJ,EAAKK,IAAKN,IACpB,kCAAKA,EAAL,W,uBCPCO,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbR,EAFa,iDAEmCS,UAAWF,GAF9C,+DAGAG,MAAMV,GAHN,cAGbW,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHlB,GAAIkB,EAAIlB,GACRC,MAAOiB,EAAIjB,MACXC,IAAG,UAAEgB,EAAIC,cAAN,aAAE,EAAYC,iBAAiBlB,QAVvB,kBAcZc,GAdY,4CAAH,sDCiCLK,EA9BC,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECFN,SAACA,GAAc,IAAD,EAEZxB,mBAAS,CAC/B8B,KAAM,GACNO,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAmBtC,OAZAC,qBAAU,WAENjB,EAAQC,GACHiB,MAAK,SAAAR,GACFM,EAAS,CACLT,KAAMG,EACNI,SAAS,SAItB,CAACb,IAEGc,EDf2BI,CAAalB,GAAjCU,EAFgB,EAEtBJ,KAAcO,EAFQ,EAERA,QAEtB,OACI,qCACI,oBAAIjB,UAAU,oDAAd,SAAmEI,IAEjEa,GACE,oBAAIjB,UAAU,wCAAd,yBAGJ,qBAAKA,UAAU,YAAf,SAEQc,EAAOF,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIlB,aEatB4B,EA7BM,SAAAC,GAAU,IAAD,EAEU5C,mBAAS,CAAC,gBAFpB,mBAEnB6C,EAFmB,KAEP9C,EAFO,KAI1B,OACI,qCACI,8CAEA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBAEA,6BAEQ8C,EAAWb,KAAI,SAAAR,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MChBjCsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bfe89423.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChanged = (e) => {\r\n        setinputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories((c) => [ inputValue, ...c]);\r\n            setinputValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChanged}\r\n                onSubmit={handleSubmit}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst GifGridItem = ({ id, title, url }) => {\r\n\r\n    console.log(id, title, url);\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn animate__slower'>\r\n            <img src={url} alt={title} />\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nGifGridItem.propTypes = {\r\n\r\n}\r\n\r\nexport default GifGridItem\r\n","\r\n\r\nexport const getGifs = async ( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=10&api_key=RvI0XnyasflTc94pfM0Pl4ThV4AvmJ6L`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport GifGridItem from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__fadeIn animate__slower'>{category}</h3>\r\n\r\n            { loading &&\r\n                <h3 className='card animate__animated animate__flash'>Loading ...</h3>\r\n            }\r\n\r\n            <div className='card-grid'>\r\n                {\r\n                    images.map(img =>\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then(img => {\r\n                setState({\r\n                    data: img,\r\n                    loading: false\r\n                })\r\n            });\r\n\r\n    }, [category]);\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = props => {\r\n\r\n    const [categories, setCategories] = useState(['Dragon Ball']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n\r\n            <AddCategory setCategories={setCategories} />\r\n\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category =>\r\n                        <GifGrid\r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nGifExpertApp.propTypes = {\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}